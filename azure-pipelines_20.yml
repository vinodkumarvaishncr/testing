trigger:
  - none

pool: 
  name: "agent5"
variables:
  path: '$(System.DefaultWorkingDirectory)/infra'

jobs:
- job: "terraform_install"
  displayName: "terraform install"
  pool: "agent5"
  steps:
  - task: TerraformInstaller@1
    displayName: "terraform installer"
    inputs:
      terraformVersion: 'latest'
  - task: TerraformTask@5
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(path)'
      backendServiceArm: 'connection_new'
      backendAzureRmStorageAccountName: 'vinodmainstorage'
      backendAzureRmContainerName: 'vinodconatiner'
      backendAzureRmKey: 'new.tfstate'
   
- job: "terraform_validate" 
  displayName: "terraform validate"
  pool: "agent5"
  dependsOn: terraform_install
  steps:
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: 'latest'
    
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(path)'
        backendServiceArm: 'connection_new'
        backendAzureRmStorageAccountName: 'vinodmainstorage'
        backendAzureRmContainerName: 'vinodconatiner'
        backendAzureRmKey: 'new.tfstate'
    - task: TerraformTask@5
      displayName: "terraform validate"
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: $(path)

- job: "terraform_plan"
  displayName: "terraform plan"
  pool: "agent5"
  dependsOn: terraform_validate
  steps:
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: 'latest'
    
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(path)'
        backendServiceArm: 'connection_new'
        backendAzureRmStorageAccountName: 'vinodmainstorage'
        backendAzureRmContainerName: 'vinodconatiner'
        backendAzureRmKey: 'new.tfstate'
    - task: TerraformTask@5
      displayName: "terraform plan"
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: $(path)
        environmentServiceNameAzureRM: 'connection_new'

- job: "manual_validation"
  displayName: "manual validation"
  dependsOn: terraform_plan
  pool: server
  steps:
  - task: ManualValidation@1
    inputs:
      notifyUsers: 'vinodkumarvaishncr@gmail.com'
      instructions: 'vinodkumarvaishncr@gmail.com'

- job: "terraform_apply"
  displayName: "terraform apply"
  pool: "agent5"
  dependsOn: manual_validation
  steps:
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      
      inputs:
        terraformVersion: 'latest'
   
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(path)'
        backendServiceArm: 'connection_new'
        backendAzureRmStorageAccountName: 'vinodmainstorage'
        backendAzureRmContainerName: 'vinodconatiner'
        backendAzureRmKey: 'new.tfstate'
    - task: TerraformTask@5
      displayName: "terraform apply"
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: $(path)
        environmentServiceNameAzureRM: 'connection_new'

 