name: Terraform Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: self-hosted

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Verify Terraform (use pre-installed version on self-hosted runner)
      - name: Verify Terraform
        run: terraform -v

      # Step 3: Azure Login (OIDC)
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          # ClientId of the Azure Service principal created.
        client-id: 53079823-d8aa-4985-91f2-988dea424d31
        # TenantId of the Azure Service principal created.
        tenant-id: ee2f7139-4072-4385-99fc-82bd6f563aa6
        # Azure subscriptionId
        subscription-id: 98b7163f-e961-4b65-98c2-7a6dc2edf5b7
        allow-no-subscriptions: true  # Optional, useful in some cases

      # Step 4: Terraform Init
      - name: Terraform Init
        working-directory: .
        run: terraform init

      # Step 5: Terraform Validate
      - name: Terraform Validate
        working-directory: .
        run: terraform validate

      # Step 6: Terraform Plan
      - name: Terraform Plan
        working-directory: .
        run: terraform plan

      # Step 7: Terraform Apply (only for main branch)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: .
        run: terraform apply -auto-approve