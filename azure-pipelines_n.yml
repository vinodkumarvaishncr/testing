trigger:
  - none

parameters:
  - name: proceed
    displayName: 'Do you want to run Terraform tasks (init, plan, apply)?'
    type: boolean
    default: false

pool: 
  name: "agent5"

variables:      # pipeline-level
  MY_VAR_PATH: '$(System.DefaultWorkingDirectory)/infra'
  

steps:
- task: TerraformInstaller@1
  condition: eq('${{ parameters.proceed }}', true)
  inputs:
    terraformVersion: 'latest'

- task: TerraformTask@5
  displayName: "init"
  condition: eq('${{ parameters.proceed }}', true)
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: $(MY_VAR_PATH)
    commandOptions: '-upgrade'
    backendServiceArm: 'connection_new'
    backendAzureRmStorageAccountName: 'vinodmainstorage'
    backendAzureRmContainerName: 'vinodconatiner'
    backendAzureRmKey: 'vinodkey.tfstate'

- task: TerraformTask@5
  displayName: "validate"
  condition: eq('${{ parameters.proceed }}', true)
  inputs:
    provider: 'azurerm'
    command: 'validate'
    workingDirectory: $(MY_VAR_PATH)

- task: TerraformTask@5
  displayName: "plan"
  condition: eq('${{ parameters.proceed }}', true)
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: $(MY_VAR_PATH)
    environmentServiceNameAzureRM: 'connection_new'

- task: TerraformTask@5
  displayName: "apply"
  condition: eq('${{ parameters.proceed }}', true)
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: $(MY_VAR_PATH)
    commandOptions: '-auto-approve'
    environmentServiceNameAzureRM: 'connection_new'